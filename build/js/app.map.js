{"version":3,"sources":["webpack:///./src/js/fquery.js"],"names":[],"mappings":"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","file":"app.bundle.js","sourcesContent":["'use strict';\n\n/**\n *  @file fQuery\n *  @copyright Nicolas James Hampton 2016\n *  @author Nicolas James Hampton <nicolasjhampton@gmail.com>\n *  @version 1.0.0\n *  @summary A DOM manipulation microlibrary based on functional programming\n *\n */\n\n/**\n *  @license MIT\n *  MIT License\n *  Copyright (c) 2016 Nicolas James Hampton\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a\n *  copy of this software and associated documentation files (the \"Software\"),\n *  to deal in the Software without restriction, including without limitation\n *  the rights to use, copy, modify, merge, publish, distribute, sublicense,\n *  and/or sell copies of the Software, and to permit persons to whom the\n *  Software is furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included\n *  in all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n *  IN THE SOFTWARE.\n */\n\n/**\n * @summary Combines several objects into one new object\n * @param {...Object} var_args - The first object to extend, followed by each object to extend it with\n * @returns {Object} A brand new object made from all the extended object parameters\n *\n */\nfunction extend(/* arguments */) {\n  var argsIn = Array.from(arguments); //[...arguments];\n  var out = argsIn.reduce(function(obj1, obj2) {\n    for(var key in obj2) {\n      obj1[key] = (typeof obj2[key] === 'object' && !(Array.isArray(obj2[key]))) ? extend(obj2[key]) : obj2[key];\n    }\n    return obj1;\n  }, {});\n  return out;\n}\n\n/**\n * @summary Returns the type of the object passed in\n * @param {*} object - The object whose type is unknown\n * @returns {string} A lowercase string representation of the type of the object\n *\n */\nfunction whatIsThis(object) {\n  var func = {}.toString;\n  var type = func.call(object);\n  return type.match(/\\[object\\s([\\w]+)\\]/i)[1].toLowerCase().trim();\n}\n\n/**\n * Creates a function to validate a value based on a list of predicates\n * passed into it.\n * @summary Creates a custom validation function\n * @param {...validator~predicate} var_arg - A list of predicate functions\n * @returns {function} A lowercase string representation of the type of the object\n *\n */\nfunction validator(/* predicate functions */) {\n  var bools = Array.from(arguments); //[...arguments];\n  return function(value) {\n    return bools.reduce(function(first, next) {\n      return (first && next(value));\n    }, true);\n  }\n}\n\n/**\n * @callback validator~predicate\n * @param {*} value to be tested\n * @returns {boolean} whether the value passed the test\n */\n\n/**\n * Predicate function for the validator creator to test if a\n * value is a string or not.\n * @private\n * @type {validator~predicate}\n * @summary tests whether value is of string type\n * @param {*} object - The object being tested\n * @returns {boolean} whether the value is a string\n *\n */\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * Predicate function for the validator creator to test\n * if the string says 'set'.\n * @private\n * @type {validator~predicate}\n * @summary tests if the string says 'set'\n * @param {*} object - The object being tested\n * @returns {boolean} whether the value is a string that says 'set'\n *\n */\nfunction isSetter(value) {\n  return value == 'set';\n}\n\n/**\n * @typedef PropertyArray\n * @type {string[]}\n * @description An two value array that represents a property key and it's value.\n */\n\n/**\n * Converts an object into an array of key/value pair arrays. For use in fquery\n * to define sets of property values to be changed.\n * @private\n * @summary Converts an object into an array of key/value pair arrays.\n * @param {Object} object - The object to be converted\n * @returns {Array.PropertyArray} -  An array of key/value arrays.\n *\n */\nfunction objToArr(obj) {\n  var out = [];\n  for(var key in obj) {\n    out.push([key, obj[key]]);\n  }\n  return out;\n}\n\n/**\n * A function to chain the end of fQuery functions. If the parameters are\n * empty, the returned value is returned. If a parameter is given, that parameter\n * is ran with the continued value given as a parameter.\n * @summary A function to chain together the end of fQuery statements.\n * @param {Object} returnedValue - What is returned if this is the end of the\n *                                 statement chain.\n * @param {Object} continuedValue - The parameter given to the next function\n *                                  if a next function is given.\n * @returns {Object|Function} -  Either the final value of the chain, or\n *                               the returned function of the next function.\n *\n */\nfunction continueOrEnd(returnedValue, continuedValue) {\n  return function(/* empty or conjunction */) {\n    return (arguments.length == 0) ? returnedValue : arguments[0](continuedValue);\n  }\n}\n\n/**\n * Creates a function to test for property aliases used in the fQuery selector\n * function (@see on).\n * @class\n * @summary Creates a property aliasing test\n * @param {...selectorValidator~aliasPredicate} var_arg - A list of predicate functions\n * @returns {function} A lowercase string representation of the type of the object\n *\n */\nfunction selectorValidator(/* predicate functions */) {\n  var bools = Array.from(arguments); // [...arguments];\n  return function(value) {\n    return bools.reduce(function(first, next) {\n      var current = next(value);\n      return (current.test) ? current : first;\n    }, {\"test\": false, \"alias\": \"\"});\n  }\n}\n\n/**\n * Predicate function for the selector validator to test if a\n * property value should be aliased.\n * @callback selectorValidator~aliasPredicate\n * @param {string} value - the property key to be tested\n * @returns {Object} aliasObject - An alias test result object\n * @returns {boolean} aliasObject.test - Whether the alias should or should\n *                                       not be used\n * @returns {string} aliasObject.alias - String to replace value if alias is to\n *                                       be used.\n *\n */\n\n/**\n * @typedef {object} selectorValidator~aliasObject\n * @description An object to be used to decide whether a property should be\n *              aliased, and how.\n * @property {boolean} aliasObject.test - whether the alias should be used\n * @property {string} aliasObject.alias - the alias to be used\n *\n */\n\n/**\n * Style property alias predicate function\n * @callback {selectorValidator~aliasPredicate}\n * @summary aliases all style properties with \".\"\n * @param {string} value - The property key being tested\n * @returns {selectorValidator~aliasObject}\n *\n */\nfunction styleAlias(value) {\n  return { \"test\": /^\\./.test(value), \"alias\": \"style\" + value };\n}\n\n/**\n * Children property alias predicate function\n * @callback {selectorValidator~aliasPredicate}\n * @summary aliases all style properties with \">\"\n * @param {string} value - The property key being tested\n * @returns {selectorValidator~aliasObject}\n *\n */\nfunction childAlias(value) {\n  return {\"test\": />/.test(value), \"alias\": value.replace(/>/gi,'.children.')};\n}\n\n/**\n * Single selections\n *\n * conjunctions take elements and return elements\n * property verbs take an element and a property array and return a property value\n * element verbs take an element and return an element\n * property nouns take a property name and return a request for a property verb\n *\n * @example:\n * $(selector)\n * (and)(property noun())(property verb())\n * (and)(property noun())(property verb())();\n *\n * $(make('input',{\"placeholder\": \"Search for students...\", \"id\": \"search\"}))\n * (and)(on('.backgroundColor'))(setVal('red'))\n * (and)(on('.width'))(setVal('100%'))\n * (and)(appendTo('.page-header'))\n * (and)(on('.width'))(setVal('50%'))()\n *\n * $('.page-header')\n * (and)(on('.backgroundColor'))(setVal('blue'))\n * (and)(on('.height'))(setVal('200px'))();\n *\n */\n\n/**\n * Starting function for modifying a single DOM element\n * @summary starts a fQuery chain for a singular element\n * @param {string|startingFunction} selector - Either a selector string for a DOM\n *                                             element, or a startingFunction for\n *                                             the chain.\n * @returns {continueOrEnd} A function that will request the next parameter. If a\n *                     selector string or {starterFunction} was passed as a\n *                     parameter, then a {conjunction} is requested. If a conjunction\n *                     was passed, then an {Element} object is requested.\n *\n */\nfunction $(selector) {\n  if(typeof selector == 'string') {\n    var element = document.querySelector(selector);\n    return continueOrEnd(element, element);\n  }\n  return selector; //if make is put inside of the function\n}\n\n/**\n * Function fed to the end of a series of operations on a single element to\n * execute another series of functions on the same element.\n * @summary connects one series of operations on an element with the next.\n * @param {Element} element - A pure DOM element, usually passed from the previous\n *                            action in the chain.\n * @returns {continueOrEnd}\n *\n */\nfunction and(element) {\n  return function actionRequest(verbOrNoun) {\n    if(typeof verbOrNoun == 'function') {\n    /* accounts for element verbs: hide and show */\n      var verb = verbOrNoun;\n      return continueOrEnd(verb(element), verb(element));\n    } else {\n    /* accounts for property nouns: on */\n      var propNounArray = verbOrNoun;\n      return function(func) { /* requests a property verb: setVal, getVal */\n        var target = func(element, propNounArray);\n        return continueOrEnd(target, element);\n      }\n    }\n  }\n}\n\n/**\n * Creates an element to start a chain of operations on.\n * @param {string} tag - the tag name for the new element\n * @param {object} obj - An object of property names and valiues for the\n *                       starting property values for the new element.\n * @returns {function} a request for a conjunction to start a chain of operations,\n *                     or the element itself in a blank function wrapper.\n *\n */\nfunction make(tag, obj) {\n  var rawElement = document.createElement(tag);\n  var element = set(obj)(rawElement);\n  return continueOrEnd(element, element);\n}\n\nfunction propWrapper(/* engine, predicate functions */) {\n  var engine = arguments[0];\n  var tests = Array.from(arguments).slice(1); // [...arguments]\n  var selectorTest = selectorValidator(...tests);\n  return function(property) {\n    var alias = selectorTest(property);\n    return (alias.test) ? engine(alias.alias) : engine(property);\n  }\n}\n\nfunction prop(property) {\n  return property.split('.').filter((key) => key !== \"\");\n}\n\n/**\n * Creates an array of property names that reference to a particular\n * property on an element.\n * @name on\n * @param {string} selector - the property selector chain with corresponding aliases.\n * @returns {string[]} An array of properties in the order they have to be accessed\n *                     to reach the deasired value.\n *\n */\nvar on = propWrapper(prop, styleAlias, childAlias);\n\n/**\n * Creates a function that uses an array of property names to return a value at\n * the end of the property chain.\n * @returns {function}\n *\n */\nfunction getValue() {\n  return function(elementSelected, array) {\n    return array.reduce(function(first, second) {\n      return first[second];\n    }, elementSelected); // returns property value\n  }\n}\n\n/**\n * Creates a function that uses an array of property names to change a value\n * at the end of the specified property chain\n * @param {string} value - The new value you want to assign to the targeted property\n * @returns {function}\n *\n */\nfunction setValue(value) {\n  return function(elementSelected, array) {\n    var keyTest = validator(isString);\n    return array.reduce(function(first, second) {\n      return (keyTest(first[second])) ? first[second] = value : first[second];\n    }, elementSelected); // returns property value\n  }\n}\n\n/**\n * Creates a function that appends the element selected to the end of the specified\n * element.\n * @param {string} selector - The selector string used to target a single DOM element\n * @returns {function}\n *\n */\nfunction appendTo(selector) {\n  var parent = document.querySelector(selector);\n  return function(elementSelected) {\n    parent.appendChild(elementSelected);\n    return elementSelected;\n  }\n}\n\n/**\n * Group selections\n * @example:\n * $$('.student-item')\n * (then)(set({'.backgroundColor':'blue'}))\n * (then)(hide)\n * (then)(find({'>0>1.innerHTML': 's'}))\n * (then)(set({'className':'student-item cf match'}))\n * (then)(set({'.backgroundColor':'orange'}))\n * (then)('slice')(0,10)\n * (then)(show)\n * (then)(set({'.backgroundColor':'red'}))();\n */\n\n/**\n * Starting function for modifying an element array\n * @summary starts a fQuery chain for a collection of elements in a native array\n * @param {string} selector - Either a selector string for a DOM\n *                            element, or a startingFunction for\n *                            the chain.\n * @returns {continueOrEnd} A function that will pass the newly created element\n *                          collection to a series of operations, starting with\n *                          the {then} keyword.\n *\n */\nfunction $$(selector) {\n  var elements = document.querySelectorAll(selector);\n  var elementArray = Array.from(elements);\n  return continueOrEnd(elementArray, elementArray);\n}\n\n/**\n * Function used to connect a series of transformations on a element collection to\n * execute another series of functions on the same collection.\n * @summary connects one series of operations on an element collection with the next.\n * @param {Element[]} elementArray - An array of pure DOM elements that we're\n *                                   transforming.\n * @returns {continueOrEnd}\n *\n */\nfunction then(elementArray) {\n  return function(action) {\n    if(typeof action == 'string') {\n    /* native array methods given as strings */\n      return function nativeMethod(/* args for native array function */) {\n        var args = Array.from(arguments);\n        var transform = elementArray[action].apply(elementArray, args);\n        return continueOrEnd(transform, transform);\n      }\n    } else if(action.name !== ''){\n    /* else action is one of the custom func's: get, set, find, hide, or show */\n      var method = 'map';\n      method = (action.name == 'm' || action.name == 'f') ? 'filter' : method;\n      var transform = elementArray[method].call(elementArray, action);\n      return continueOrEnd(transform, transform);\n    } else {\n    /* one of the functions from the underscore.js library */\n      return function underscore(/* args for underscore function */) {\n        var args = [elementArray].concat(Array.from(arguments));\n        var transform = action.apply(null, args);\n        return continueOrEnd(transform, transform);\n      }\n    }\n  }\n}\n\nfunction actionMaker(action) {\n  return function(object) {\n    var propArray = objToArr(object);\n    return action.call(null, propArray);\n  }\n}\n\n/**\n * @private\n * @summary finds any elements in the collection that contain this value in this property.\n * @param {PropertyArray} propArray - An array of key/value arrays.\n * @returns {boolean}\n *\n */\nfunction matchIt(propArray) {\n  return function m(element) {\n    return propArray.every(function(property) {\n      return $(and)(element)(on(property[0]))(getValue())() == property[1];\n    });\n  }\n}\n\n/**\n * @private\n * @summary sets this property of all the elements in the collection to this value.\n * @param {PropertyArray} propArray - An array of key/value arrays.\n * @returns {Element}\n *\n */\nfunction setIt(propArray) {\n  return function s(element) {\n    propArray.map(function(property) {\n      $(and)(element)(on(property[0]))(setValue(property[1]))();\n    });\n    return element;\n  }\n}\n\n/**\n * @private\n * @summary finds any elements in the collection that contain this value in this property.\n * @param {PropertyArray} propArray - An array of key/value arrays.\n * @returns {boolean}\n *\n */\nfunction findIt(propArray) {\n  return function f(element) {\n    return propArray.some(function(property) {\n      return $(and)(element)(on(property[0]))(getValue())().includes(property[1]);\n    });\n  }\n}\n\n/**\n * @function\n * @summary finds any elements in the collection that contain this value in this property.\n * @param {Object} object - An object of element key/value pairs.\n * @returns {boolean}\n *\n */\nvar match = actionMaker(matchIt);\n\n/**\n * @function\n * @summary finds any elements in the collection that contain this value in this property.\n * @param {Object} object - An object of element key/value pairs.\n * @returns {boolean}\n *\n */\nvar find = actionMaker(findIt);\n\n/**\n * @function\n * @summary sets this property of all the elements in the collection to this value.\n * @param {Object} object - An object of element key/value pairs.\n * @returns {Element}\n *\n */\nvar set = actionMaker(setIt);\n\n/**\n * @summary hides the element, or all elements in the collection.\n * @param {Element}\n * @returns {Element}\n *\n */\nfunction hide(element) {\n  element.style.opacity = '0';\n  element.$$$display = getComputedStyle(element).display;\n  element.style.display = \"none\";\n  return element;\n}\n\n/**\n * @summary shows the element, or all elements in the collection.\n * @param {Element}\n * @returns {Element}\n *\n */\nfunction show(element) {\n  element.style.opacity = '1';\n  element.style.display = (element.$$$display) ? element.$$$display : \"\";\n  delete element.$$$display;\n  return element;\n}\n\n\n/**\n @example: stock import statement\n\n import * as util from './fquery';\n\n var extend = util.extend;\n var $ = util.$;\n var and = util.and;\n var on = util.on;\n var make = util.make;\n var getValue = util.getValue;\n var setValue = util.setValue;\n var appendTo = util.appendTo;\n var $$ = util.$$;\n var then = util.then;\n var hide = util.hide;\n var show = util.show;\n var set = util.set;\n var match = util.match;\n var find = util.find;\n */\n\nmodule.exports.$ = $;\nmodule.exports.and = and;\nmodule.exports.on = on;\nmodule.exports.make = make;\nmodule.exports.getValue = getValue;\nmodule.exports.setValue = setValue;\nmodule.exports.appendTo = appendTo;\nmodule.exports.$$ = $$;\nmodule.exports.then = then;\nmodule.exports.hide = hide;\nmodule.exports.show = show;\nmodule.exports.set = set;\nmodule.exports.match = match;\nmodule.exports.find = find;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/fquery.js\n **/"],"sourceRoot":""}